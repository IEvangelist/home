@inherits LayoutComponentBase
@inject ILocalStorageService LocalStorage

<MudThemeProvider @bind-IsDarkMode="@_isDarkTheme" Theme="_theme" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="0">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit"
                       Size=Size.Large Edge ="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudSpacer />
        <MudToggleIconButton Toggled="@_isDarkTheme" ToggledChanged=@OnToggledChanged Size=Size.Large
                             Title="Switch to Dark Theme" Icon=@Icons.Material.Outlined.DarkMode 
                             Color=@Color.Inherit ToggledSize=Size.Large
                             ToggledTitle="Switch to Light Theme" 
                             ToggledIcon=@Icons.Material.Filled.LightMode ToggledColor=@Color.Default />
        <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit"
                       Size=Size.Large Href ="https://github.com/dotnet-community/home" Target="_blank" />
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" Elevation="5">
        <MudDrawerHeader>
            <MudText Typo="Typo.h5" Color=Color.Surface>.NET Community</MudText>
        </MudDrawerHeader>
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large" Class="my-6 pt-6">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    const string PrefersDarkThemeKey = "prefers-dark-scheme";

    MudTheme _theme = new();
    bool _drawerOpen = true;
    bool _isDarkTheme
    {
        get => LocalStorage.GetItem<bool>(PrefersDarkThemeKey);
        set => LocalStorage.SetItem<bool>(PrefersDarkThemeKey, value);
    }

    void DrawerToggle() => _drawerOpen = !_drawerOpen;
    void OnToggledChanged() => _isDarkTheme = !_isDarkTheme;
}
